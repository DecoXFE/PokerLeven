[manifest]
version = "1.0.0"
dump_lua = true
priority = 1000

# Players only functionality
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "if v.yes_pool_flag and not G.GAME.pool_flags[v.yes_pool_flag] then add = nil end"
position = "after"
payload = '''
if v.set == 'Joker' and not v.pteam then add = nil end
'''
match_indent = true

# Replace start menu logo with inazuma
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = '''
G.SPLASH_LOGO = Sprite(0, 0, 
    13*SC_scale, 
    13*SC_scale*(G.ASSET_ATLAS["balatro"].py/G.ASSET_ATLAS["balatro"].px),
    G.ASSET_ATLAS["balatro"], {x=0,y=0})
'''
position = "at"
payload = '''
    local ina_logo = "ina_logo"
    G.SPLASH_LOGO = Sprite(0, 0, 
        13/333*389*SC_scale, 
        13/333*389*SC_scale*(G.ASSET_ATLAS[ina_logo].py/G.ASSET_ATLAS[ina_logo].px),
        G.ASSET_ATLAS[ina_logo], {x=0.0,y=0})
'''
match_indent = true
override = true

# Replace start menu card
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = '''
local replace_card = Card(self.title_top.T.x, self.title_top.T.y, 1.2*G.CARD_W*SC_scale, 1.2*G.CARD_H*SC_scale, G.P_CARDS.S_A, G.P_CENTERS.c_base)
'''
position = "at"
payload = '''
local replace_card = Card(self.title_top.T.x, self.title_top.T.y, 1.2*G.CARD_W*SC_scale, 1.2*G.CARD_H*SC_scale, G.P_CARDS.empty, G.P_CENTERS.j_ina_Mark)
G.P_CENTERS.j_ina_Mark:set_sprites(replace_card)
'''
match_indent = true

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "replace_card.states.visible = false"
position = "after"
payload = "replace_card.seal = nil"
match_indent = true

# Replace discord link
[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = '''
G.FUNCS.go_to_discord = function(e)
  love.system.openURL( "https://discord.gg/balatro" )
end
'''
position = "at"
payload = '''
G.FUNCS.go_to_discord = function(e)
  love.system.openURL( "https://t.co/B87tVSx3gY" )
end
'''
match_indent = true
override = true

# Replace twitter link
[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = '''
G.FUNCS.go_to_twitter = function(e)
  love.system.openURL( "https://twitter.com/LocalThunk" )
end
'''
position = "at"
payload = '''
G.FUNCS.go_to_twitter = function(e)
  love.system.openURL( "https://x.com/MrDecou" )
end
G.FUNCS.go_to_twitterSynkro = function(e)
  love.system.openURL( "https://x.com/_Synkro" )
end
'''
match_indent = true
override = true

# Replace discord and twitter icons
[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = '''
  if G.F_DISCORD then 
    discord = Sprite(0,0,0.6,0.6,G.ASSET_ATLAS["icons"], {x=0, y=0})
    discord.states.drag.can = false
    twitter = Sprite(0,0,0.6,0.6,G.ASSET_ATLAS["icons"], {x=0, y=1})
    twitter.states.drag.can = false
  end
'''
position = "at"
payload = '''
  if G.F_DISCORD then 
    discord = Sprite(0,0,0.6,0.6,G.ASSET_ATLAS["ina_custom_icons"], {x=2, y=0})
    discord.states.drag.can = false
    twitter = Sprite(0,0,0.6,0.6,G.ASSET_ATLAS["ina_custom_icons"], {x=1, y=0})
    twitter.states.drag.can = false
    twitterSynkro = Sprite(0,0,0.6,0.6,G.ASSET_ATLAS["ina_custom_icons"], {x=0, y=0})
    twitterSynkro.states.drag.can = false
  end
'''
match_indent = true
override = true

# Add second twitter
[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = '''
{n=G.UIT.C, config={align = "cm", padding = 0.1, r = 0.1, hover = true, colour = mix_colours(G.C.BLUE, G.C.GREY, 0.4), button = 'go_to_discord', shadow = true}, nodes={
  {n=G.UIT.O, config={object = discord}},
}},
{n=G.UIT.C, config={align = "cm", padding = 0.1, r = 0.1, hover = true, colour = G.C.BLACK, button = 'go_to_twitter', shadow = true}, nodes={
  {n=G.UIT.O, config={object = twitter}},
}}
'''
position = "at"
payload = '''
{n=G.UIT.C, config={align = "cm", padding = 0.1, r = 0.1, hover = true, colour = mix_colours(G.C.BLUE, G.C.GREY, 0.4), button = 'go_to_discord', shadow = true, tooltip = { title = 'Pokerleven Discord' }}, nodes={
  {n=G.UIT.O, config={object = discord}},
}},
{n=G.UIT.C, config={align = "cm", padding = 0.1, r = 0.1, hover = true, colour = G.C.BLACK, button = 'go_to_twitter', shadow = true, tooltip = { title = '@MrDecou' }}, nodes={
  {n=G.UIT.O, config={object = twitter}},
}},
{n=G.UIT.C, config={align = "cm", padding = 0.1, r = 0.1, hover = true, colour = G.C.BLACK, button = 'go_to_twitterSynkro', shadow = true, tooltip = { title = '@_Synkro' }}, nodes={
  {n=G.UIT.O, config={object = twitterSynkro}},
}}
'''
match_indent = true
override = true


# Replace start menu logo with inazuma
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = '''
G.SPLASH_LOGO = Sprite(0, 0, 
    13*SC_scale, 
    13*SC_scale*(G.ASSET_ATLAS["balatro"].py/G.ASSET_ATLAS["balatro"].px),
    G.ASSET_ATLAS["balatro"], {x=0,y=0})
'''
position = "at"
payload = '''
    local ina_logo = "ina_logo"
    G.SPLASH_LOGO = Sprite(0, 0, 
        13/333*389*SC_scale, 
        13/333*389*SC_scale*(G.ASSET_ATLAS[ina_logo].py/G.ASSET_ATLAS[ina_logo].px),
        G.ASSET_ATLAS[ina_logo], {x=0.0,y=0})
'''
match_indent = true
override = true

# Round replaced by matches
[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = '''
{n=G.UIT.T, config={text = localize('b_next_round_2'), scale = 0.4, colour = G.C.WHITE, shadow = true}}
'''
position = "at"
payload = '''
{n=G.UIT.T, config={text = localize('ina_next_match'), scale = 0.4, colour = G.C.WHITE, shadow = true}}
'''
match_indent = true
override = true

# Add total moons played
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
if not copier then set_consumeable_usage(self) end
'''
position = "after"
payload = '''
if self.ability.name == 'The Moon' then
  G.E_MANAGER:add_event(Event({
    trigger = 'after',
    delay = 0.1,
    func = function()
      G.GAME.used_moon_cards = (G.GAME.used_moon_cards or 0) + 1
      return true
    end
  }))
end
'''
match_indent = true
override = true

# Add total stars played
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
if not copier then set_consumeable_usage(self) end
'''
position = "after"
payload = '''
if self.ability.name == 'The Star' then
  G.E_MANAGER:add_event(Event({
    trigger = 'after',
    delay = 0.1,
    func = function()
      G.GAME.used_star_cards = (G.GAME.used_star_cards or 0) + 1
      return true
    end
  }))
end
'''
match_indent = true
override = true

# Add total worlds played
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
if not copier then set_consumeable_usage(self) end
'''
position = "after"
payload = '''
if self.ability.name == 'The World' then
  G.E_MANAGER:add_event(Event({
    trigger = 'after',
    delay = 0.1,
    func = function()
      G.GAME.used_world_cards = (G.GAME.used_world_cards or 0) + 1
      return true
    end
  }))
end
'''
match_indent = true
override = true

# Add total suns played
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
if not copier then set_consumeable_usage(self) end
'''
position = "after"
payload = '''
if self.ability.name == 'The Sun' then
  G.E_MANAGER:add_event(Event({
    trigger = 'after',
    delay = 0.1,
    func = function()
      G.GAME.used_sun_cards = (G.GAME.used_sun_cards or 0) + 1
      return true
    end
  }))
end
'''

match_indent = true

# Max allowed tech level a joker can reach
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = '''
joker_usage = {},
'''
position = "after"
payload = '''
max_tech_level = 3,
'''
match_indent = true

# Splash Screen
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "SC = Card(G.ROOM.T.w/2 - SC_scale*G.CARD_W/2, 10. + G.ROOM.T.h/2 - SC_scale*G.CARD_H/2, SC_scale*G.CARD_W, SC_scale*G.CARD_H, G.P_CARDS.empty, G.P_CENTERS['j_joker'])"
position = "after"
payload = '''
local players = {}
  for k, v in pairs(G.P_CENTERS) do
    if v.set == 'Joker' and v.pteam then
      table.insert(players, v)
    end
  end
  if #players > 0 then
    local chosen = math.random(#players)
    local chosencard = players[chosen]
    SC = Card(G.ROOM.T.w/2 - SC_scale*G.CARD_W/2, 10. + G.ROOM.T.h/2 - SC_scale*G.CARD_H/2, SC_scale*G.CARD_W, SC_scale*G.CARD_H, G.P_CARDS.empty, chosencard)
end
'''
match_indent = true

# Scry Functionality  -- THANKS TO POKERMON
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "if #G.hand.cards < 1 and #G.deck.cards < 1 and #G.play.cards < 1 then"
position = "before"
payload = '''
if not self.scry_view and type(create_scry_cardarea) == "function" then
  self.scry_view = create_scry_cardarea()
elseif self.scry_view then
  update_scry_cardarea(self.scry_view)
end
'''
match_indent = true

# Scry Functionality 2
[[patches]]
[patches.pattern]
target = "cardarea.lua"
pattern = "if self.config.type == 'hand' or self.config.type == 'play' or self.config.type == 'title' or self.config.type == 'voucher' then"
position = "at"
payload = "if self.config.type == 'hand' or self.config.type == 'scry' or self.config.type == 'play' or self.config.type == 'title' or self.config.type == 'voucher' then"
match_indent = true
overwrite = true


# Scry Functionality 3
[[patches]]
[patches.pattern]
target = "cardarea.lua"
pattern = "if self.config.type == 'hand' and not (G.STATE == G.STATES.TAROT_PACK or G.STATE == G.STATES.SPECTRAL_PACK or G.STATE == G.STATES.PLANET_PACK or G.STATE == G.STATES.SMODS_BOOSTER_OPENED) then"
position = "at"
payload = "if self.config.type == 'scry' or self.config.type == 'hand' and not (G.STATE == G.STATES.TAROT_PACK or G.STATE == G.STATES.SPECTRAL_PACK or G.STATE == G.STATES.PLANET_PACK or G.STATE == G.STATES.SMODS_BOOSTER_OPENED) then"
match_indent = true
overwrite = true

# Scry Functionality 4
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "function Game:update_round_eval(dt)"
position = "after"
payload = '''
    if G.scry_view then hide_scry_cardarea() end
'''
match_indent = true

# Scry Functionality 5
[[patches]]
[patches.pattern]
target = '=[SMODS _ "src/utils.lua"]'
pattern = "-- TARGET: add your own CardAreas for playing card evaluation"
position = "after"
payload = '''
if G.scry_view and G.scry_view.cards then
    t[#t+1] = G.scry_view
end
'''
match_indent = true

# Scry Functionality 3
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "local config = {}"
position = "before"
payload = '''
if card.area == G.scry_view then
    y_off = -0.05*G.CARD_H
    card_aligned = 'tm'
end
'''
match_indent = true


# Disable decks
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = '''
b_blue=             {name = "Blue Deck",        stake = 1, unlocked = false,order = 2, pos =  {x=0,y=2}, set = "Back", config = {hands = 1}, unlock_condition = {type = 'discover_amount', amount = 20}},
b_yellow=           {name = "Yellow Deck",      stake = 1, unlocked = false,order = 3, pos =  {x=1,y=2}, set = "Back", config = {dollars = 10}, unlock_condition = {type = 'discover_amount', amount = 50}},
b_green=            {name = "Green Deck",       stake = 1, unlocked = false,order = 4, pos =  {x=2,y=2}, set = "Back", config = {extra_hand_bonus = 2, extra_discard_bonus = 1, no_interest = true}, unlock_condition = {type = 'discover_amount', amount = 75}},
b_black=            {name = "Black Deck",       stake = 1, unlocked = false,order = 5, pos =  {x=3,y=2}, set = "Back", config = {hands = -1, joker_slot = 1}, unlock_condition = {type = 'discover_amount', amount = 100}},
b_magic=            {name = "Magic Deck",       stake = 1, unlocked = false,order = 6, pos =  {x=0,y=3}, set = "Back", config = {voucher = 'v_crystal_ball', consumables = {'c_fool', 'c_fool'}}, unlock_condition = {type = 'win_deck', deck = 'b_red'}},
b_nebula=           {name = "Nebula Deck",      stake = 1, unlocked = false,order = 7, pos =  {x=3,y=0}, set = "Back", config = {voucher = 'v_telescope', consumable_slot = -1}, unlock_condition = {type = 'win_deck', deck = 'b_blue'}},
b_ghost=            {name = "Ghost Deck",       stake = 1, unlocked = false,order = 8, pos =  {x=6,y=2}, set = "Back", config = {spectral_rate = 2, consumables = {'c_hex'}}, unlock_condition = {type = 'win_deck', deck = 'b_yellow'}},
b_abandoned=        {name = "Abandoned Deck",   stake = 1, unlocked = false,order = 9, pos =  {x=3,y=3}, set = "Back", config = {remove_faces = true}, unlock_condition = {type = 'win_deck', deck = 'b_green'}},
b_checkered=        {name = "Checkered Deck",   stake = 1, unlocked = false,order = 10,pos =  {x=1,y=3}, set = "Back", config = {}, unlock_condition = {type = 'win_deck', deck = 'b_black'}},
b_zodiac=           {name = "Zodiac Deck",      stake = 1, unlocked = false,order = 11, pos = {x=3,y=4}, set = "Back", config = {vouchers = {'v_tarot_merchant','v_planet_merchant', 'v_overstock_norm'}}, unlock_condition = {type = 'win_stake', stake = 2}},
b_painted=          {name = "Painted Deck",     stake = 1, unlocked = false,order = 12, pos = {x=4,y=3}, set = "Back", config = {hand_size = 2, joker_slot = -1}, unlock_condition = {type = 'win_stake', stake=3}},
b_anaglyph=         {name = "Anaglyph Deck",    stake = 1, unlocked = false,order = 13, pos = {x=2,y=4}, set = "Back", config = {}, unlock_condition = {type = 'win_stake', stake = 4}},
b_plasma=           {name = "Plasma Deck",      stake = 1, unlocked = false,order = 14, pos = {x=4,y=2}, set = "Back", config = {ante_scaling = 2}, unlock_condition = {type = 'win_stake', stake=5}},
b_erratic=          {name = "Erratic Deck",     stake = 1, unlocked = false,order = 15, pos = {x=2,y=3}, set = "Back", config = {randomize_rank_suit = true}, unlock_condition = {type = 'win_stake', stake=7}},
'''
position = "at"
payload = '''
b_blue=             {name = "Blue Deck",        stake = 1, unlocked = false,order = 2, pos =  {x=0,y=2}, set = "Back", config = {hands = 1}, unlock_condition = {type = 'discover_amount', amount = 20}},
b_yellow=           {name = "Yellow Deck",      stake = 1, unlocked = false,order = 3, pos =  {x=1,y=2}, set = "Back", config = {dollars = 10}, unlock_condition = {type = 'discover_amount', amount = 50}},
b_green=            {name = "Green Deck",       stake = 1, unlocked = false,order = 4, pos =  {x=2,y=2}, set = "Back", config = {extra_hand_bonus = 2, extra_discard_bonus = 1, no_interest = true}, unlock_condition = {type = 'discover_amount', amount = 75}},
b_black=            {name = "Black Deck",       stake = 1, unlocked = false,order = 5, pos =  {x=3,y=2}, set = "Back", config = {hands = -1, joker_slot = 1}, unlock_condition = {type = 'discover_amount', amount = 100}},
b_magic=            {name = "Magic Deck",       stake = 1, unlocked = false,order = 6, pos =  {x=0,y=3}, set = "Back", config = {voucher = 'v_crystal_ball', consumables = {'c_fool', 'c_fool'}}, unlock_condition = {type = 'win_deck', deck = 'b_red'}},
b_nebula=           {name = "Nebula Deck",      stake = 1, unlocked = false,order = 7, pos =  {x=3,y=0}, set = "Back", config = {voucher = 'v_telescope', consumable_slot = -1}, unlock_condition = {type = 'win_deck', deck = 'b_blue'}},
b_abandoned=        {name = "Abandoned Deck",   stake = 1, unlocked = false,order = 9, pos =  {x=3,y=3}, set = "Back", config = {remove_faces = true}, unlock_condition = {type = 'win_deck', deck = 'b_green'}},
b_checkered=        {name = "Checkered Deck",   stake = 1, unlocked = false,order = 10,pos =  {x=1,y=3}, set = "Back", config = {}, unlock_condition = {type = 'win_deck', deck = 'b_black'}},
b_zodiac=           {name = "Zodiac Deck",      stake = 1, unlocked = false,order = 11, pos = {x=3,y=4}, set = "Back", config = {vouchers = {'v_tarot_merchant','v_planet_merchant', 'v_overstock_norm'}}, unlock_condition = {type = 'win_stake', stake = 2}},
b_painted=          {name = "Painted Deck",     stake = 1, unlocked = false,order = 12, pos = {x=4,y=3}, set = "Back", config = {hand_size = 2, joker_slot = -1}, unlock_condition = {type = 'win_stake', stake=3}},
b_anaglyph=         {name = "Anaglyph Deck",    stake = 1, unlocked = false,order = 13, pos = {x=2,y=4}, set = "Back", config = {}, unlock_condition = {type = 'win_stake', stake = 4}},
b_plasma=           {name = "Plasma Deck",      stake = 1, unlocked = false,order = 14, pos = {x=4,y=2}, set = "Back", config = {ante_scaling = 2}, unlock_condition = {type = 'win_stake', stake=5}},
b_erratic=          {name = "Erratic Deck",     stake = 1, unlocked = false,order = 15, pos = {x=2,y=3}, set = "Back", config = {randomize_rank_suit = true}, unlock_condition = {type = 'win_stake', stake=7}},
'''
match_indent = true
