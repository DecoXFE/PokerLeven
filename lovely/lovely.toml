[manifest]
version = "1.0.0"
dump_lua = true
priority = 1000

# Players only functionality
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "if v.yes_pool_flag and not G.GAME.pool_flags[v.yes_pool_flag] then add = nil end"
position = "after"
payload = '''
if v.set == 'Joker' and not v.pteam then add = nil end
'''
match_indent = true

# Replace start menu logo with inazuma
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = '''
G.SPLASH_LOGO = Sprite(0, 0, 
    13*SC_scale, 
    13*SC_scale*(G.ASSET_ATLAS["balatro"].py/G.ASSET_ATLAS["balatro"].px),
    G.ASSET_ATLAS["balatro"], {x=0,y=0})
'''
position = "at"
payload = '''
    local ina_logo = "ina_logo"
    G.SPLASH_LOGO = Sprite(0, 0, 
        13/333*389*SC_scale, 
        13/333*389*SC_scale*(G.ASSET_ATLAS[ina_logo].py/G.ASSET_ATLAS[ina_logo].px),
        G.ASSET_ATLAS[ina_logo], {x=0.0,y=0})
'''
match_indent = true
override = true

# Replace discord link
[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = '''
G.FUNCS.go_to_discord = function(e)
  love.system.openURL( "https://discord.gg/balatro" )
end
'''
position = "at"
payload = '''
G.FUNCS.go_to_discord = function(e)
  love.system.openURL( "https://t.co/B87tVSx3gY" )
end
'''
match_indent = true
override = true

# Replace twitter link
[[patches]]
[patches.pattern]
target = "functions/button_callbacks.lua"
pattern = '''
G.FUNCS.go_to_twitter = function(e)
  love.system.openURL( "https://twitter.com/LocalThunk" )
end
'''
position = "at"
payload = '''
G.FUNCS.go_to_twitter = function(e)
  love.system.openURL( "https://x.com/MrDecou" )
end
G.FUNCS.go_to_twitterSynkro = function(e)
  love.system.openURL( "https://x.com/_Synkro" )
end
'''
match_indent = true
override = true

# Replace discord and twitter icons
[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = '''
  if G.F_DISCORD then 
    discord = Sprite(0,0,0.6,0.6,G.ASSET_ATLAS["icons"], {x=0, y=0})
    discord.states.drag.can = false
    twitter = Sprite(0,0,0.6,0.6,G.ASSET_ATLAS["icons"], {x=0, y=1})
    twitter.states.drag.can = false
  end
'''
position = "at"
payload = '''
  if G.F_DISCORD then 
    discord = Sprite(0,0,0.6,0.6,G.ASSET_ATLAS["ina_custom_icons"], {x=2, y=0})
    discord.states.drag.can = false
    twitter = Sprite(0,0,0.6,0.6,G.ASSET_ATLAS["ina_custom_icons"], {x=1, y=0})
    twitter.states.drag.can = false
    twitterSynkro = Sprite(0,0,0.6,0.6,G.ASSET_ATLAS["ina_custom_icons"], {x=0, y=0})
    twitterSynkro.states.drag.can = false
  end
'''
match_indent = true
override = true

# Add second twitter
[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = '''
{n=G.UIT.C, config={align = "cm", padding = 0.1, r = 0.1, hover = true, colour = mix_colours(G.C.BLUE, G.C.GREY, 0.4), button = 'go_to_discord', shadow = true}, nodes={
  {n=G.UIT.O, config={object = discord}},
}},
{n=G.UIT.C, config={align = "cm", padding = 0.1, r = 0.1, hover = true, colour = G.C.BLACK, button = 'go_to_twitter', shadow = true}, nodes={
  {n=G.UIT.O, config={object = twitter}},
}}
'''
position = "at"
payload = '''
{n=G.UIT.C, config={align = "cm", padding = 0.1, r = 0.1, hover = true, colour = mix_colours(G.C.BLUE, G.C.GREY, 0.4), button = 'go_to_discord', shadow = true, tooltip = { title = 'Pokerleven Discord' }}, nodes={
  {n=G.UIT.O, config={object = discord}},
}},
{n=G.UIT.C, config={align = "cm", padding = 0.1, r = 0.1, hover = true, colour = G.C.BLACK, button = 'go_to_twitter', shadow = true, tooltip = { title = '@MrDecou' }}, nodes={
  {n=G.UIT.O, config={object = twitter}},
}},
{n=G.UIT.C, config={align = "cm", padding = 0.1, r = 0.1, hover = true, colour = G.C.BLACK, button = 'go_to_twitterSynkro', shadow = true, tooltip = { title = '@_Synkro' }}, nodes={
  {n=G.UIT.O, config={object = twitterSynkro}},
}}
'''
match_indent = true
override = true


# Replace start menu logo with inazuma
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = '''
G.SPLASH_LOGO = Sprite(0, 0, 
    13*SC_scale, 
    13*SC_scale*(G.ASSET_ATLAS["balatro"].py/G.ASSET_ATLAS["balatro"].px),
    G.ASSET_ATLAS["balatro"], {x=0,y=0})
'''
position = "at"
payload = '''
    local ina_logo = "ina_logo"
    G.SPLASH_LOGO = Sprite(0, 0, 
        13/333*389*SC_scale, 
        13/333*389*SC_scale*(G.ASSET_ATLAS[ina_logo].py/G.ASSET_ATLAS[ina_logo].px),
        G.ASSET_ATLAS[ina_logo], {x=0.0,y=0})
'''
match_indent = true
override = true

# Round replaced by matches
[[patches]]
[patches.pattern]
target = "functions/UI_definitions.lua"
pattern = '''
{n=G.UIT.T, config={text = localize('b_next_round_2'), scale = 0.4, colour = G.C.WHITE, shadow = true}}
'''
position = "at"
payload = '''
{n=G.UIT.T, config={text = localize('ina_next_match'), scale = 0.4, colour = G.C.WHITE, shadow = true}}
'''
match_indent = true
override = true

# Add total moons played
[[patches]]
[patches.pattern]
target = "card.lua"
pattern = '''
if not copier then set_consumeable_usage(self) end
'''
position = "after"
payload = '''
if self.ability.name == 'The Moon' then
  G.E_MANAGER:add_event(Event({
    trigger = 'after',
    delay = 0.1,
    func = function()
      G.GAME.used_moon_cards = (G.GAME.used_moon_cards or 0) + 1
      return true
    end
  }))
end
'''
match_indent = true

# Max allowed tech level a joker can reach
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = '''
joker_usage = {},
'''
position = "after"
payload = '''
max_tech_level = 3,
'''
match_indent = true

# Splash Screen
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "SC = Card(G.ROOM.T.w/2 - SC_scale*G.CARD_W/2, 10. + G.ROOM.T.h/2 - SC_scale*G.CARD_H/2, SC_scale*G.CARD_W, SC_scale*G.CARD_H, G.P_CARDS.empty, G.P_CENTERS['j_joker'])"
position = "after"
payload = '''
local players = {}
  for k, v in pairs(G.P_CENTERS) do
    if v.set == 'Joker' and v.pteam then
      table.insert(players, v)
    end
  end
  if #players > 0 then
    local chosen = math.random(#players)
    local chosencard = players[chosen]
    SC = Card(G.ROOM.T.w/2 - SC_scale*G.CARD_W/2, 10. + G.ROOM.T.h/2 - SC_scale*G.CARD_H/2, SC_scale*G.CARD_W, SC_scale*G.CARD_H, G.P_CARDS.empty, chosencard)
end
'''
match_indent = true

# Scry Functionality  -- THANKS TO POKERMON
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "if #G.hand.cards < 1 and #G.deck.cards < 1 and #G.play.cards < 1 then"
position = "before"
payload = '''
if not self.scry_view and type(create_scry_cardarea) == "function" then
  self.scry_view = create_scry_cardarea()
elseif self.scry_view then
  update_scry_cardarea(self.scry_view)
end
'''
match_indent = true

# Scry Functionality 2
[[patches]]
[patches.pattern]
target = "cardarea.lua"
pattern = "if self.config.type == 'hand' or self.config.type == 'play' or self.config.type == 'title' or self.config.type == 'voucher' then"
position = "at"
payload = "if self.config.type == 'hand' or self.config.type == 'scry' or self.config.type == 'play' or self.config.type == 'title' or self.config.type == 'voucher' then"
match_indent = true
overwrite = true


# Scry Functionality 3
[[patches]]
[patches.pattern]
target = "cardarea.lua"
pattern = "if self.config.type == 'hand' and not (G.STATE == G.STATES.TAROT_PACK or G.STATE == G.STATES.SPECTRAL_PACK or G.STATE == G.STATES.PLANET_PACK or G.STATE == G.STATES.SMODS_BOOSTER_OPENED) then"
position = "at"
payload = "if self.config.type == 'scry' or self.config.type == 'hand' and not (G.STATE == G.STATES.TAROT_PACK or G.STATE == G.STATES.SPECTRAL_PACK or G.STATE == G.STATES.PLANET_PACK or G.STATE == G.STATES.SMODS_BOOSTER_OPENED) then"
match_indent = true
overwrite = true

# Scry Functionality 4
[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "function Game:update_round_eval(dt)"
position = "after"
payload = '''
    if G.scry_view then hide_scry_cardarea() end
'''
match_indent = true

# Scry Functionality 5
[[patches]]
[patches.pattern]
target = '=[SMODS _ "src/utils.lua"]'
pattern = "-- TARGET: add your own CardAreas for playing card evaluation"
position = "after"
payload = '''
if G.scry_view and G.scry_view.cards then
    t[#t+1] = G.scry_view
end
'''
match_indent = true

# Scry Functionality 3
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "local config = {}"
position = "before"
payload = '''
if card.area == G.scry_view then
    y_off = -0.05*G.CARD_H
    card_aligned = 'tm'
end
'''
match_indent = true
